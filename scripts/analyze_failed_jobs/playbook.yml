- hosts: build.clusterhq.com
  become: true

  tasks:
    - name: Create local work directories
      local_action: file dest={{ item }} state=directory
      with_items:
        - /tmp/jobs-work
        - out
      become: false

    - name: Tar jobs
      shell: docker run --rm --volumes-from=buildmaster python python -c "import glob,subprocess,os;os.chdir('/srv/buildmaster/data');subprocess.check_call(['/bin/tar', 'c'] + glob.glob('flocker*/????'))" > /tmp/jobs.tar.gz
    
    - name: Download jobs
      fetch: src=/tmp/jobs.tar.gz dest=/tmp/jobs.tar.gz flat=true

    - name: Untar jobs on the local node
      local_action: unarchive copy=no src=/tmp/jobs.tar.gz dest=/tmp/jobs-work/
      become: false
    
    - name: Find failed jobs
      action: parsejobs
      register: jobs
    
    - name: Store file list
      copy: 
        dest: /tmp/stdout-files 
        content: "{{Â jobs.jobs }}"
      
    - name: Tar failed job output
      shell: tar cfz /tmp/failed-stdout.tar.gz --files-from=/tmp/stdout-files || true 2> /dev/null
      args: 
        chdir: "{{ buildbot_dir }}"
      
    - name: Download failed job output
      fetch: src=/tmp/failed-stdout.tar.gz dest=/tmp/failed-stdout.tar.gz flat=true
      
    - name: Uncompress failed job output
      local_action: unarchive copy=no src=/tmp/failed-stdout.tar.gz dest=/tmp/jobs-work/
      become: false
    
    - name: Parse failed job stdout
      action: parsestdouts
      
    - name: Cleanup
      local_action: file dest=/tmp/jobs-work state=absent
      become: false
